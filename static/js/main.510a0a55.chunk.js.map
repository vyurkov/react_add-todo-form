{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosFS","App","useState","setTodos","setTitle","titleError","setTitleError","setUser","userError","setUserError","action","method","onSubmit","event","preventDefault","newUser","Number","newTodo","Math","max","state","type","placeholder","value","onChange","target","disabled","userFS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.510a0a55.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {\n        todo.user\n        && <UserInfo user={todo.user} key={todo.user.id} />\n      }\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst todosFS: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFS);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [user, setUser] = useState('0');\n  const [userError, setUserError] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (!title || user === '0') {\n            if (!title) {\n              setTitleError(true);\n            }\n\n            if (user === '0') {\n              setUserError(true);\n            }\n\n            return;\n          }\n\n          const newUser = getUser(Number(user));\n          const newTodo: Todo = {\n            id: Math.max(...todos.map(todo => todo.id)) + 1,\n            userId: newUser?.id || 0,\n            title,\n            completed: false,\n            user: newUser,\n          };\n\n          setTodos(state => [...state, newTodo]);\n          setTitle('');\n          setUser('0');\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {\n            titleError\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              setUser(event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userFS => {\n              return (\n                <option value={userFS.id}>{userFS.name}</option>\n              );\n            })}\n          </select>\n\n          {\n            userError\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}